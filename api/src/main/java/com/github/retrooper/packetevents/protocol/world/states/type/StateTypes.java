package com.github.retrooper.packetevents.protocol.world.states.type;

import com.github.retrooper.packetevents.protocol.world.MaterialType;
import com.github.retrooper.packetevents.protocol.world.PushReaction;

public class StateTypes {
    public static StateType AIR = StateTypes.builder().isAir(true).setMaterial(MaterialType.AIR).build();
    public static StateType STONE = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GRANITE = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_GRANITE = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DIORITE = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_DIORITE = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType ANDESITE = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_ANDESITE = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType COBBLED_DEEPSLATE = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_DEEPSLATE = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CALCITE = StateTypes.builder().blastResistance(0.75f).hardness(0.75f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType TUFF = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DRIPSTONE_BLOCK = StateTypes.builder().blastResistance(1.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GRASS_BLOCK = StateTypes.builder().blastResistance(0.6f).hardness(0.6f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.GRASS).build();
    public static StateType DIRT = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.DIRT).build();
    public static StateType COARSE_DIRT = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.DIRT).build();
    public static StateType PODZOL = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.DIRT).build();
    public static StateType ROOTED_DIRT = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.DIRT).build();
    public static StateType CRIMSON_NYLIUM = StateTypes.builder().blastResistance(0.4f).hardness(0.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType WARPED_NYLIUM = StateTypes.builder().blastResistance(0.4f).hardness(0.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType COBBLESTONE = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType OAK_PLANKS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SPRUCE_PLANKS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BIRCH_PLANKS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType JUNGLE_PLANKS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ACACIA_PLANKS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DARK_OAK_PLANKS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CRIMSON_PLANKS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType WARPED_PLANKS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType OAK_SAPLING = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType SPRUCE_SAPLING = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType BIRCH_SAPLING = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType JUNGLE_SAPLING = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType ACACIA_SAPLING = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType DARK_OAK_SAPLING = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType BEDROCK = StateTypes.builder().blastResistance(3600000.0f).hardness(-1.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.STONE).build();
    public static StateType SAND = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType RED_SAND = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType GRAVEL = StateTypes.builder().blastResistance(0.6f).hardness(0.6f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType COAL_ORE = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_COAL_ORE = StateTypes.builder().blastResistance(3.0f).hardness(4.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType IRON_ORE = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_IRON_ORE = StateTypes.builder().blastResistance(3.0f).hardness(4.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType COPPER_ORE = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_COPPER_ORE = StateTypes.builder().blastResistance(3.0f).hardness(4.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GOLD_ORE = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_GOLD_ORE = StateTypes.builder().blastResistance(3.0f).hardness(4.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType REDSTONE_ORE = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_REDSTONE_ORE = StateTypes.builder().blastResistance(3.0f).hardness(4.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType EMERALD_ORE = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_EMERALD_ORE = StateTypes.builder().blastResistance(3.0f).hardness(4.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LAPIS_ORE = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_LAPIS_ORE = StateTypes.builder().blastResistance(3.0f).hardness(4.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DIAMOND_ORE = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_DIAMOND_ORE = StateTypes.builder().blastResistance(3.0f).hardness(4.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType NETHER_GOLD_ORE = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType NETHER_QUARTZ_ORE = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType ANCIENT_DEBRIS = StateTypes.builder().blastResistance(1200.0f).hardness(30.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType COAL_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(5.0f).isBurnable(true).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RAW_IRON_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(5.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RAW_COPPER_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(5.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RAW_GOLD_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(5.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType AMETHYST_BLOCK = StateTypes.builder().blastResistance(1.5f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.AMETHYST).build();
    public static StateType BUDDING_AMETHYST = StateTypes.builder().blastResistance(1.5f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.AMETHYST).build();
    public static StateType IRON_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(5.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType COPPER_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType GOLD_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType DIAMOND_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(5.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType NETHERITE_BLOCK = StateTypes.builder().blastResistance(1200.0f).hardness(50.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType EXPOSED_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WEATHERED_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType OXIDIZED_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType CUT_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType EXPOSED_CUT_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WEATHERED_CUT_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType OXIDIZED_CUT_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType CUT_COPPER_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType EXPOSED_CUT_COPPER_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WEATHERED_CUT_COPPER_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType OXIDIZED_CUT_COPPER_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType CUT_COPPER_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType EXPOSED_CUT_COPPER_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WEATHERED_CUT_COPPER_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType OXIDIZED_CUT_COPPER_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_COPPER_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_EXPOSED_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_WEATHERED_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_OXIDIZED_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_CUT_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_EXPOSED_CUT_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_WEATHERED_CUT_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_OXIDIZED_CUT_COPPER = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_CUT_COPPER_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_EXPOSED_CUT_COPPER_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_WEATHERED_CUT_COPPER_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_OXIDIZED_CUT_COPPER_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_CUT_COPPER_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_EXPOSED_CUT_COPPER_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_WEATHERED_CUT_COPPER_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WAXED_OXIDIZED_CUT_COPPER_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType OAK_LOG = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SPRUCE_LOG = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BIRCH_LOG = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType JUNGLE_LOG = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ACACIA_LOG = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DARK_OAK_LOG = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CRIMSON_STEM = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType WARPED_STEM = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType STRIPPED_OAK_LOG = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STRIPPED_SPRUCE_LOG = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STRIPPED_BIRCH_LOG = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STRIPPED_JUNGLE_LOG = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STRIPPED_ACACIA_LOG = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STRIPPED_DARK_OAK_LOG = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STRIPPED_CRIMSON_STEM = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType STRIPPED_WARPED_STEM = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType STRIPPED_OAK_WOOD = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STRIPPED_SPRUCE_WOOD = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STRIPPED_BIRCH_WOOD = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STRIPPED_JUNGLE_WOOD = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STRIPPED_ACACIA_WOOD = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STRIPPED_DARK_OAK_WOOD = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STRIPPED_CRIMSON_HYPHAE = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType STRIPPED_WARPED_HYPHAE = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType OAK_WOOD = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SPRUCE_WOOD = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BIRCH_WOOD = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType JUNGLE_WOOD = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ACACIA_WOOD = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DARK_OAK_WOOD = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CRIMSON_HYPHAE = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType WARPED_HYPHAE = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType OAK_LEAVES = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.LEAVES).build();
    public static StateType SPRUCE_LEAVES = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.LEAVES).build();
    public static StateType BIRCH_LEAVES = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.LEAVES).build();
    public static StateType JUNGLE_LEAVES = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.LEAVES).build();
    public static StateType ACACIA_LEAVES = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.LEAVES).build();
    public static StateType DARK_OAK_LEAVES = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.LEAVES).build();
    public static StateType AZALEA_LEAVES = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.LEAVES).build();
    public static StateType FLOWERING_AZALEA_LEAVES = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.LEAVES).build();
    public static StateType SPONGE = StateTypes.builder().blastResistance(0.6f).hardness(0.6f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SPONGE).build();
    public static StateType WET_SPONGE = StateTypes.builder().blastResistance(0.6f).hardness(0.6f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SPONGE).build();
    public static StateType GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType TINTED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType LAPIS_BLOCK = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType SANDSTONE = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CHISELED_SANDSTONE = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CUT_SANDSTONE = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType COBWEB = StateTypes.builder().blastResistance(4.0f).hardness(4.0f).requiresCorrectTool(true).setMaterial(MaterialType.WEB).build();
    public static StateType GRASS = StateTypes.builder().isBurnable(true).isFlammable(true).setMaterial(MaterialType.REPLACEABLE_PLANT).build();
    public static StateType FERN = StateTypes.builder().isBurnable(true).isFlammable(true).setMaterial(MaterialType.REPLACEABLE_PLANT).build();
    public static StateType AZALEA = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType FLOWERING_AZALEA = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType DEAD_BUSH = StateTypes.builder().isBurnable(true).isFlammable(true).setMaterial(MaterialType.REPLACEABLE_PLANT).build();
    public static StateType SEAGRASS = StateTypes.builder().setMaterial(MaterialType.REPLACEABLE_WATER_PLANT).build();
    public static StateType SEA_PICKLE = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType WHITE_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType ORANGE_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType MAGENTA_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType LIGHT_BLUE_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType YELLOW_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType LIME_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType PINK_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType GRAY_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType LIGHT_GRAY_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType CYAN_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType PURPLE_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType BLUE_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType BROWN_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType GREEN_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType RED_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType BLACK_WOOL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType DANDELION = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType POPPY = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType BLUE_ORCHID = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType ALLIUM = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType AZURE_BLUET = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType RED_TULIP = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType ORANGE_TULIP = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType WHITE_TULIP = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType PINK_TULIP = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType OXEYE_DAISY = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType CORNFLOWER = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType LILY_OF_THE_VALLEY = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType WITHER_ROSE = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType SPORE_BLOSSOM = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType BROWN_MUSHROOM = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType RED_MUSHROOM = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType CRIMSON_FUNGUS = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType WARPED_FUNGUS = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType CRIMSON_ROOTS = StateTypes.builder().setMaterial(MaterialType.REPLACEABLE_FIREPROOF_PLANT).build();
    public static StateType WARPED_ROOTS = StateTypes.builder().setMaterial(MaterialType.REPLACEABLE_FIREPROOF_PLANT).build();
    public static StateType NETHER_SPROUTS = StateTypes.builder().setMaterial(MaterialType.REPLACEABLE_FIREPROOF_PLANT).build();
    public static StateType WEEPING_VINES = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType TWISTING_VINES = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType SUGAR_CANE = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType KELP = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType MOSS_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.PLANT).build();
    public static StateType MOSS_BLOCK = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.MOSS).build();
    public static StateType HANGING_ROOTS = StateTypes.builder().isBurnable(true).isFlammable(true).setMaterial(MaterialType.REPLACEABLE_PLANT).build();
    public static StateType BIG_DRIPLEAF = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType SMALL_DRIPLEAF = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType BAMBOO = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.BAMBOO).build();
    public static StateType OAK_SLAB = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SPRUCE_SLAB = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BIRCH_SLAB = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType JUNGLE_SLAB = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ACACIA_SLAB = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DARK_OAK_SLAB = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CRIMSON_SLAB = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType WARPED_SLAB = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType STONE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SMOOTH_STONE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SANDSTONE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CUT_SANDSTONE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PETRIFIED_OAK_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType COBBLESTONE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BRICK_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType STONE_BRICK_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType NETHER_BRICK_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType QUARTZ_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RED_SANDSTONE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CUT_RED_SANDSTONE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PURPUR_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PRISMARINE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PRISMARINE_BRICK_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DARK_PRISMARINE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SMOOTH_QUARTZ = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SMOOTH_RED_SANDSTONE = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SMOOTH_SANDSTONE = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SMOOTH_STONE = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BOOKSHELF = StateTypes.builder().blastResistance(1.5f).hardness(1.5f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType MOSSY_COBBLESTONE = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType OBSIDIAN = StateTypes.builder().blastResistance(1200.0f).hardness(50.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType TORCH = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType END_ROD = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType CHORUS_PLANT = StateTypes.builder().blastResistance(0.4f).hardness(0.4f).setMaterial(MaterialType.PLANT).build();
    public static StateType CHORUS_FLOWER = StateTypes.builder().blastResistance(0.4f).hardness(0.4f).setMaterial(MaterialType.PLANT).build();
    public static StateType PURPUR_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PURPUR_PILLAR = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PURPUR_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SPAWNER = StateTypes.builder().blastResistance(5.0f).hardness(5.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType OAK_STAIRS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CHEST = StateTypes.builder().blastResistance(2.5f).hardness(2.5f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CRAFTING_TABLE = StateTypes.builder().blastResistance(2.5f).hardness(2.5f).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType FARMLAND = StateTypes.builder().blastResistance(0.6f).hardness(0.6f).isSolid(true).isBlocking(true).setMaterial(MaterialType.DIRT).build();
    public static StateType FURNACE = StateTypes.builder().blastResistance(3.5f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LADDER = StateTypes.builder().blastResistance(0.4f).hardness(0.4f).setMaterial(MaterialType.DECORATION).build();
    public static StateType COBBLESTONE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SNOW = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).requiresCorrectTool(true).setMaterial(MaterialType.TOP_SNOW).build();
    public static StateType ICE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).slipperiness(0.98f).isSolid(true).isBlocking(true).setMaterial(MaterialType.ICE).build();
    public static StateType SNOW_BLOCK = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.SNOW).build();
    public static StateType CACTUS = StateTypes.builder().blastResistance(0.4f).hardness(0.4f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CACTUS).build();
    public static StateType CLAY = StateTypes.builder().blastResistance(0.6f).hardness(0.6f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.CLAY).build();
    public static StateType JUKEBOX = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType OAK_FENCE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SPRUCE_FENCE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BIRCH_FENCE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType JUNGLE_FENCE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ACACIA_FENCE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DARK_OAK_FENCE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CRIMSON_FENCE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType WARPED_FENCE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType PUMPKIN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.VEGETABLE).build();
    public static StateType CARVED_PUMPKIN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.VEGETABLE).build();
    public static StateType JACK_O_LANTERN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.VEGETABLE).build();
    public static StateType NETHERRACK = StateTypes.builder().blastResistance(0.4f).hardness(0.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SOUL_SAND = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType SOUL_SOIL = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.DIRT).build();
    public static StateType BASALT = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_BASALT = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SMOOTH_BASALT = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SOUL_TORCH = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType GLOWSTONE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType INFESTED_STONE = StateTypes.builder().blastResistance(0.75f).hardness(0.75f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.CLAY).build();
    public static StateType INFESTED_COBBLESTONE = StateTypes.builder().blastResistance(0.75f).hardness(1.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.CLAY).build();
    public static StateType INFESTED_STONE_BRICKS = StateTypes.builder().blastResistance(0.75f).hardness(0.75f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.CLAY).build();
    public static StateType INFESTED_MOSSY_STONE_BRICKS = StateTypes.builder().blastResistance(0.75f).hardness(0.75f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.CLAY).build();
    public static StateType INFESTED_CRACKED_STONE_BRICKS = StateTypes.builder().blastResistance(0.75f).hardness(0.75f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.CLAY).build();
    public static StateType INFESTED_CHISELED_STONE_BRICKS = StateTypes.builder().blastResistance(0.75f).hardness(0.75f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.CLAY).build();
    public static StateType INFESTED_DEEPSLATE = StateTypes.builder().blastResistance(0.75f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.CLAY).build();
    public static StateType STONE_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType MOSSY_STONE_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CRACKED_STONE_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CHISELED_STONE_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CRACKED_DEEPSLATE_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_TILES = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CRACKED_DEEPSLATE_TILES = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CHISELED_DEEPSLATE = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BROWN_MUSHROOM_BLOCK = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType RED_MUSHROOM_BLOCK = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType MUSHROOM_STEM = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType IRON_BARS = StateTypes.builder().blastResistance(6.0f).hardness(5.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType CHAIN = StateTypes.builder().blastResistance(6.0f).hardness(5.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType MELON = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.VEGETABLE).build();
    public static StateType VINE = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.REPLACEABLE_PLANT).build();
    public static StateType GLOW_LICHEN = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.REPLACEABLE_PLANT).build();
    public static StateType BRICK_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType STONE_BRICK_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType MYCELIUM = StateTypes.builder().blastResistance(0.6f).hardness(0.6f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.GRASS).build();
    public static StateType LILY_PAD = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType NETHER_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CRACKED_NETHER_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CHISELED_NETHER_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType NETHER_BRICK_FENCE = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType NETHER_BRICK_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType ENCHANTING_TABLE = StateTypes.builder().blastResistance(1200.0f).hardness(5.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType END_PORTAL_FRAME = StateTypes.builder().blastResistance(3600000.0f).hardness(-1.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.STONE).build();
    public static StateType END_STONE = StateTypes.builder().blastResistance(9.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType END_STONE_BRICKS = StateTypes.builder().blastResistance(9.0f).hardness(3.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DRAGON_EGG = StateTypes.builder().blastResistance(9.0f).hardness(3.0f).hasGravity(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.EGG).build();
    public static StateType SANDSTONE_STAIRS = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType ENDER_CHEST = StateTypes.builder().blastResistance(600.0f).hardness(22.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType EMERALD_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(5.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType SPRUCE_STAIRS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BIRCH_STAIRS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType JUNGLE_STAIRS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CRIMSON_STAIRS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType WARPED_STAIRS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType COMMAND_BLOCK = StateTypes.builder().blastResistance(3600000.0f).hardness(-1.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType BEACON = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType COBBLESTONE_WALL = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType MOSSY_COBBLESTONE_WALL = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BRICK_WALL = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PRISMARINE_WALL = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RED_SANDSTONE_WALL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType MOSSY_STONE_BRICK_WALL = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GRANITE_WALL = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType STONE_BRICK_WALL = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType NETHER_BRICK_WALL = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType ANDESITE_WALL = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RED_NETHER_BRICK_WALL = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SANDSTONE_WALL = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType END_STONE_BRICK_WALL = StateTypes.builder().blastResistance(9.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DIORITE_WALL = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BLACKSTONE_WALL = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_BLACKSTONE_WALL = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_BLACKSTONE_BRICK_WALL = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType COBBLED_DEEPSLATE_WALL = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_DEEPSLATE_WALL = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_BRICK_WALL = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_TILE_WALL = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType ANVIL = StateTypes.builder().blastResistance(1200.0f).hardness(5.0f).hasGravity(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.HEAVY_METAL).build();
    public static StateType CHIPPED_ANVIL = StateTypes.builder().blastResistance(1200.0f).hardness(5.0f).hasGravity(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.HEAVY_METAL).build();
    public static StateType DAMAGED_ANVIL = StateTypes.builder().blastResistance(1200.0f).hardness(5.0f).hasGravity(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.HEAVY_METAL).build();
    public static StateType CHISELED_QUARTZ_BLOCK = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType QUARTZ_BLOCK = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType QUARTZ_BRICKS = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType QUARTZ_PILLAR = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType QUARTZ_STAIRS = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType WHITE_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType ORANGE_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType MAGENTA_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LIGHT_BLUE_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType YELLOW_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LIME_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PINK_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GRAY_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LIGHT_GRAY_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CYAN_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PURPLE_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BLUE_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BROWN_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GREEN_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RED_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BLACK_TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BARRIER = StateTypes.builder().blastResistance(3600000.8f).hardness(-1.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.BARRIER).build();
    public static StateType LIGHT = StateTypes.builder().blastResistance(3600000.8f).hardness(-1.0f).setMaterial(MaterialType.AIR).build();
    public static StateType HAY_BLOCK = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isBurnable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.GRASS).build();
    public static StateType WHITE_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType ORANGE_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType MAGENTA_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType LIGHT_BLUE_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType YELLOW_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType LIME_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType PINK_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType GRAY_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType LIGHT_GRAY_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType CYAN_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType PURPLE_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType BLUE_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType BROWN_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType GREEN_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType RED_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType BLACK_CARPET = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).isFlammable(true).setMaterial(MaterialType.CLOTH_DECORATION).build();
    public static StateType TERRACOTTA = StateTypes.builder().blastResistance(4.2f).hardness(1.25f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PACKED_ICE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).slipperiness(0.98f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.ICE_SOLID).build();
    public static StateType ACACIA_STAIRS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DARK_OAK_STAIRS = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DIRT_PATH = StateTypes.builder().blastResistance(0.65f).hardness(0.65f).isSolid(true).isBlocking(true).setMaterial(MaterialType.DIRT).build();
    public static StateType SUNFLOWER = StateTypes.builder().isBurnable(true).isFlammable(true).setMaterial(MaterialType.REPLACEABLE_PLANT).build();
    public static StateType LILAC = StateTypes.builder().isBurnable(true).isFlammable(true).setMaterial(MaterialType.REPLACEABLE_PLANT).build();
    public static StateType ROSE_BUSH = StateTypes.builder().isBurnable(true).isFlammable(true).setMaterial(MaterialType.REPLACEABLE_PLANT).build();
    public static StateType PEONY = StateTypes.builder().isBurnable(true).isFlammable(true).setMaterial(MaterialType.REPLACEABLE_PLANT).build();
    public static StateType TALL_GRASS = StateTypes.builder().isBurnable(true).isFlammable(true).setMaterial(MaterialType.REPLACEABLE_PLANT).build();
    public static StateType LARGE_FERN = StateTypes.builder().isBurnable(true).isFlammable(true).setMaterial(MaterialType.REPLACEABLE_PLANT).build();
    public static StateType WHITE_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType ORANGE_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType MAGENTA_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType LIGHT_BLUE_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType YELLOW_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType LIME_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType PINK_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType GRAY_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType LIGHT_GRAY_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType CYAN_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType PURPLE_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType BLUE_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType BROWN_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType GREEN_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType RED_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType BLACK_STAINED_GLASS = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType WHITE_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType ORANGE_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType MAGENTA_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType LIGHT_BLUE_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType YELLOW_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType LIME_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType PINK_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType GRAY_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType LIGHT_GRAY_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType CYAN_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType PURPLE_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType BLUE_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType BROWN_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType GREEN_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType RED_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType BLACK_STAINED_GLASS_PANE = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType PRISMARINE = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PRISMARINE_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DARK_PRISMARINE = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PRISMARINE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PRISMARINE_BRICK_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DARK_PRISMARINE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SEA_LANTERN = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType RED_SANDSTONE = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CHISELED_RED_SANDSTONE = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CUT_RED_SANDSTONE = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RED_SANDSTONE_STAIRS = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType REPEATING_COMMAND_BLOCK = StateTypes.builder().blastResistance(3600000.0f).hardness(-1.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType CHAIN_COMMAND_BLOCK = StateTypes.builder().blastResistance(3600000.0f).hardness(-1.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType MAGMA_BLOCK = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType NETHER_WART_BLOCK = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.GRASS).build();
    public static StateType WARPED_WART_BLOCK = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.GRASS).build();
    public static StateType RED_NETHER_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BONE_BLOCK = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType STRUCTURE_VOID = StateTypes.builder().setMaterial(MaterialType.STRUCTURAL_AIR).build();
    public static StateType SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType WHITE_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType ORANGE_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType MAGENTA_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType LIGHT_BLUE_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType YELLOW_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType LIME_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType PINK_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType GRAY_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType LIGHT_GRAY_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType CYAN_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType PURPLE_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType BLUE_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType BROWN_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType GREEN_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType RED_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType BLACK_SHULKER_BOX = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SHULKER_SHELL).build();
    public static StateType WHITE_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType ORANGE_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType MAGENTA_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LIGHT_BLUE_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType YELLOW_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LIME_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PINK_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GRAY_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LIGHT_GRAY_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CYAN_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PURPLE_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BLUE_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BROWN_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GREEN_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RED_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BLACK_GLAZED_TERRACOTTA = StateTypes.builder().blastResistance(1.4f).hardness(1.4f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType WHITE_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType ORANGE_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType MAGENTA_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LIGHT_BLUE_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType YELLOW_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LIME_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PINK_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GRAY_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LIGHT_GRAY_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CYAN_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType PURPLE_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BLUE_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BROWN_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GREEN_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RED_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BLACK_CONCRETE = StateTypes.builder().blastResistance(1.8f).hardness(1.8f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType WHITE_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType ORANGE_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType MAGENTA_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType LIGHT_BLUE_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType YELLOW_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType LIME_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType PINK_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType GRAY_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType LIGHT_GRAY_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType CYAN_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType PURPLE_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType BLUE_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType BROWN_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType GREEN_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType RED_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType BLACK_CONCRETE_POWDER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).hasGravity(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.SAND).build();
    public static StateType TURTLE_EGG = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.EGG).build();
    public static StateType DEAD_TUBE_CORAL_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_BRAIN_CORAL_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_BUBBLE_CORAL_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_FIRE_CORAL_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_HORN_CORAL_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType TUBE_CORAL_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BRAIN_CORAL_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BUBBLE_CORAL_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType FIRE_CORAL_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType HORN_CORAL_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType TUBE_CORAL = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType BRAIN_CORAL = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType BUBBLE_CORAL = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType FIRE_CORAL = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType HORN_CORAL = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType DEAD_BRAIN_CORAL = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_BUBBLE_CORAL = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_FIRE_CORAL = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_HORN_CORAL = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_TUBE_CORAL = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType TUBE_CORAL_FAN = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType BRAIN_CORAL_FAN = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType BUBBLE_CORAL_FAN = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType FIRE_CORAL_FAN = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType HORN_CORAL_FAN = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType DEAD_TUBE_CORAL_FAN = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_BRAIN_CORAL_FAN = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_BUBBLE_CORAL_FAN = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_FIRE_CORAL_FAN = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_HORN_CORAL_FAN = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BLUE_ICE = StateTypes.builder().blastResistance(2.8f).hardness(2.8f).slipperiness(0.989f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.ICE_SOLID).build();
    public static StateType CONDUIT = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.GLASS).build();
    public static StateType POLISHED_GRANITE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SMOOTH_RED_SANDSTONE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType MOSSY_STONE_BRICK_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_DIORITE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType MOSSY_COBBLESTONE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType END_STONE_BRICK_STAIRS = StateTypes.builder().blastResistance(9.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType STONE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SMOOTH_SANDSTONE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SMOOTH_QUARTZ_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GRANITE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType ANDESITE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RED_NETHER_BRICK_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_ANDESITE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DIORITE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType COBBLED_DEEPSLATE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_DEEPSLATE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_BRICK_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_TILE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_GRANITE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SMOOTH_RED_SANDSTONE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType MOSSY_STONE_BRICK_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_DIORITE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType MOSSY_COBBLESTONE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType END_STONE_BRICK_SLAB = StateTypes.builder().blastResistance(9.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SMOOTH_SANDSTONE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SMOOTH_QUARTZ_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GRANITE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType ANDESITE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RED_NETHER_BRICK_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_ANDESITE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DIORITE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType COBBLED_DEEPSLATE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_DEEPSLATE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_BRICK_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEEPSLATE_TILE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType SCAFFOLDING = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.DECORATION).build();
    public static StateType REDSTONE_TORCH = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType REDSTONE_BLOCK = StateTypes.builder().blastResistance(6.0f).hardness(5.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType REPEATER = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType COMPARATOR = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType PISTON = StateTypes.builder().blastResistance(1.5f).hardness(1.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.PISTON).build();
    public static StateType STICKY_PISTON = StateTypes.builder().blastResistance(1.5f).hardness(1.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.PISTON).build();
    public static StateType SLIME_BLOCK = StateTypes.builder().slipperiness(0.8f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.CLAY).build();
    public static StateType HONEY_BLOCK = StateTypes.builder().isSolid(true).isBlocking(true).setMaterial(MaterialType.CLAY).build();
    public static StateType OBSERVER = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType HOPPER = StateTypes.builder().blastResistance(4.8f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType DISPENSER = StateTypes.builder().blastResistance(3.5f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DROPPER = StateTypes.builder().blastResistance(3.5f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LECTERN = StateTypes.builder().blastResistance(2.5f).hardness(2.5f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType TARGET = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isBurnable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.GRASS).build();
    public static StateType LEVER = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).setMaterial(MaterialType.DECORATION).build();
    public static StateType LIGHTNING_ROD = StateTypes.builder().blastResistance(6.0f).hardness(3.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType DAYLIGHT_DETECTOR = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SCULK_SENSOR = StateTypes.builder().blastResistance(1.5f).hardness(1.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.SCULK).build();
    public static StateType TRIPWIRE_HOOK = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType TRAPPED_CHEST = StateTypes.builder().blastResistance(2.5f).hardness(2.5f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType TNT = StateTypes.builder().isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.EXPLOSIVE).build();
    public static StateType REDSTONE_LAMP = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.BUILDABLE_GLASS).build();
    public static StateType NOTE_BLOCK = StateTypes.builder().blastResistance(0.8f).hardness(0.8f).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STONE_BUTTON = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).setMaterial(MaterialType.DECORATION).build();
    public static StateType POLISHED_BLACKSTONE_BUTTON = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).setMaterial(MaterialType.DECORATION).build();
    public static StateType OAK_BUTTON = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).setMaterial(MaterialType.DECORATION).build();
    public static StateType SPRUCE_BUTTON = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).setMaterial(MaterialType.DECORATION).build();
    public static StateType BIRCH_BUTTON = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).setMaterial(MaterialType.DECORATION).build();
    public static StateType JUNGLE_BUTTON = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).setMaterial(MaterialType.DECORATION).build();
    public static StateType ACACIA_BUTTON = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).setMaterial(MaterialType.DECORATION).build();
    public static StateType DARK_OAK_BUTTON = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).setMaterial(MaterialType.DECORATION).build();
    public static StateType CRIMSON_BUTTON = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).setMaterial(MaterialType.DECORATION).build();
    public static StateType WARPED_BUTTON = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).setMaterial(MaterialType.DECORATION).build();
    public static StateType STONE_PRESSURE_PLATE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_BLACKSTONE_PRESSURE_PLATE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType LIGHT_WEIGHTED_PRESSURE_PLATE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType HEAVY_WEIGHTED_PRESSURE_PLATE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType OAK_PRESSURE_PLATE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SPRUCE_PRESSURE_PLATE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BIRCH_PRESSURE_PLATE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType JUNGLE_PRESSURE_PLATE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ACACIA_PRESSURE_PLATE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DARK_OAK_PRESSURE_PLATE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CRIMSON_PRESSURE_PLATE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(false).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType WARPED_PRESSURE_PLATE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(false).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType IRON_DOOR = StateTypes.builder().blastResistance(5.0f).hardness(5.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType OAK_DOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SPRUCE_DOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BIRCH_DOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType JUNGLE_DOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ACACIA_DOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DARK_OAK_DOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CRIMSON_DOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType WARPED_DOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType IRON_TRAPDOOR = StateTypes.builder().blastResistance(5.0f).hardness(5.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType OAK_TRAPDOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SPRUCE_TRAPDOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BIRCH_TRAPDOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType JUNGLE_TRAPDOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ACACIA_TRAPDOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DARK_OAK_TRAPDOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CRIMSON_TRAPDOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType WARPED_TRAPDOOR = StateTypes.builder().blastResistance(3.0f).hardness(3.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType OAK_FENCE_GATE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SPRUCE_FENCE_GATE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BIRCH_FENCE_GATE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType JUNGLE_FENCE_GATE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ACACIA_FENCE_GATE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DARK_OAK_FENCE_GATE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CRIMSON_FENCE_GATE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType WARPED_FENCE_GATE = StateTypes.builder().blastResistance(3.0f).hardness(2.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType POWERED_RAIL = StateTypes.builder().blastResistance(0.7f).hardness(0.7f).setMaterial(MaterialType.DECORATION).build();
    public static StateType DETECTOR_RAIL = StateTypes.builder().blastResistance(0.7f).hardness(0.7f).setMaterial(MaterialType.DECORATION).build();
    public static StateType RAIL = StateTypes.builder().blastResistance(0.7f).hardness(0.7f).setMaterial(MaterialType.DECORATION).build();
    public static StateType ACTIVATOR_RAIL = StateTypes.builder().blastResistance(0.7f).hardness(0.7f).setMaterial(MaterialType.DECORATION).build();
    public static StateType STRUCTURE_BLOCK = StateTypes.builder().blastResistance(3600000.0f).hardness(-1.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType JIGSAW = StateTypes.builder().blastResistance(3600000.0f).hardness(-1.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType WHEAT = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType OAK_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SPRUCE_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BIRCH_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType JUNGLE_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ACACIA_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DARK_OAK_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CRIMSON_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isSolid(false).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType WARPED_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isSolid(false).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType DRIED_KELP_BLOCK = StateTypes.builder().blastResistance(2.5f).hardness(0.5f).isBurnable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.GRASS).build();
    public static StateType CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType WHITE_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType ORANGE_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType MAGENTA_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType LIGHT_BLUE_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType YELLOW_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType LIME_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType PINK_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType GRAY_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType LIGHT_GRAY_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType CYAN_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType PURPLE_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType BLUE_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType BROWN_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType GREEN_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType RED_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType BLACK_BED = StateTypes.builder().blastResistance(0.2f).hardness(0.2f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOL).build();
    public static StateType NETHER_WART = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType BREWING_STAND = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType CAULDRON = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType FLOWER_POT = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType SKELETON_SKULL = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).setMaterial(MaterialType.DECORATION).build();
    public static StateType WITHER_SKELETON_SKULL = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).setMaterial(MaterialType.DECORATION).build();
    public static StateType PLAYER_HEAD = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).setMaterial(MaterialType.DECORATION).build();
    public static StateType ZOMBIE_HEAD = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).setMaterial(MaterialType.DECORATION).build();
    public static StateType CREEPER_HEAD = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).setMaterial(MaterialType.DECORATION).build();
    public static StateType DRAGON_HEAD = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).setMaterial(MaterialType.DECORATION).build();
    public static StateType WHITE_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ORANGE_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType MAGENTA_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType LIGHT_BLUE_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType YELLOW_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType LIME_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType PINK_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType GRAY_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType LIGHT_GRAY_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CYAN_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType PURPLE_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BLUE_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BROWN_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType GREEN_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType RED_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BLACK_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType LOOM = StateTypes.builder().blastResistance(2.5f).hardness(2.5f).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType COMPOSTER = StateTypes.builder().blastResistance(0.6f).hardness(0.6f).isBurnable(true).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BARREL = StateTypes.builder().blastResistance(2.5f).hardness(2.5f).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SMOKER = StateTypes.builder().blastResistance(3.5f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BLAST_FURNACE = StateTypes.builder().blastResistance(3.5f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CARTOGRAPHY_TABLE = StateTypes.builder().blastResistance(2.5f).hardness(2.5f).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType FLETCHING_TABLE = StateTypes.builder().blastResistance(2.5f).hardness(2.5f).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType GRINDSTONE = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.HEAVY_METAL).build();
    public static StateType SMITHING_TABLE = StateTypes.builder().blastResistance(2.5f).hardness(2.5f).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType STONECUTTER = StateTypes.builder().blastResistance(3.5f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BELL = StateTypes.builder().blastResistance(5.0f).hardness(5.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType LANTERN = StateTypes.builder().blastResistance(3.5f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType SOUL_LANTERN = StateTypes.builder().blastResistance(3.5f).hardness(3.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType CAMPFIRE = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SOUL_CAMPFIRE = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isFlammable(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SHROOMLIGHT = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.GRASS).build();
    public static StateType BEE_NEST = StateTypes.builder().blastResistance(0.3f).hardness(0.3f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BEEHIVE = StateTypes.builder().blastResistance(0.6f).hardness(0.6f).isBurnable(true).isFlammable(true).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType HONEYCOMB_BLOCK = StateTypes.builder().blastResistance(0.6f).hardness(0.6f).isOccluding(true).isSolid(true).isBlocking(true).setMaterial(MaterialType.CLAY).build();
    public static StateType LODESTONE = StateTypes.builder().blastResistance(3.5f).hardness(3.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.HEAVY_METAL).build();
    public static StateType CRYING_OBSIDIAN = StateTypes.builder().blastResistance(1200.0f).hardness(50.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BLACKSTONE = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BLACKSTONE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType BLACKSTONE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType GILDED_BLACKSTONE = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_BLACKSTONE = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_BLACKSTONE_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_BLACKSTONE_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CHISELED_POLISHED_BLACKSTONE = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_BLACKSTONE_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_BLACKSTONE_BRICK_SLAB = StateTypes.builder().blastResistance(6.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType POLISHED_BLACKSTONE_BRICK_STAIRS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CRACKED_POLISHED_BLACKSTONE_BRICKS = StateTypes.builder().blastResistance(6.0f).hardness(1.5f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType RESPAWN_ANCHOR = StateTypes.builder().blastResistance(1200.0f).hardness(50.0f).isOccluding(true).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType WHITE_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType ORANGE_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType MAGENTA_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType LIGHT_BLUE_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType YELLOW_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType LIME_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType PINK_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType GRAY_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType LIGHT_GRAY_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType CYAN_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType PURPLE_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType BLUE_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType BROWN_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType GREEN_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType RED_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType BLACK_CANDLE = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).setMaterial(MaterialType.DECORATION).build();
    public static StateType SMALL_AMETHYST_BUD = StateTypes.builder().blastResistance(1.5f).hardness(1.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.AMETHYST).build();
    public static StateType MEDIUM_AMETHYST_BUD = StateTypes.builder().blastResistance(1.5f).hardness(1.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.AMETHYST).build();
    public static StateType LARGE_AMETHYST_BUD = StateTypes.builder().blastResistance(1.5f).hardness(1.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.AMETHYST).build();
    public static StateType AMETHYST_CLUSTER = StateTypes.builder().blastResistance(1.5f).hardness(1.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.AMETHYST).build();
    public static StateType POINTED_DRIPSTONE = StateTypes.builder().blastResistance(3.0f).hardness(1.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.STONE).build();
    public static StateType WATER = StateTypes.builder().blastResistance(100.0f).hardness(100.0f).setMaterial(MaterialType.WATER).build();
    public static StateType LAVA = StateTypes.builder().blastResistance(100.0f).hardness(100.0f).setMaterial(MaterialType.LAVA).build();
    public static StateType TALL_SEAGRASS = StateTypes.builder().setMaterial(MaterialType.REPLACEABLE_WATER_PLANT).build();
    public static StateType PISTON_HEAD = StateTypes.builder().blastResistance(1.5f).hardness(1.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.PISTON).build();
    public static StateType MOVING_PISTON = StateTypes.builder().blastResistance(0.0f).hardness(-1.0f).isSolid(true).isBlocking(true).setMaterial(MaterialType.PISTON).build();
    public static StateType WALL_TORCH = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType FIRE = StateTypes.builder().setMaterial(MaterialType.FIRE).build();
    public static StateType SOUL_FIRE = StateTypes.builder().setMaterial(MaterialType.FIRE).build();
    public static StateType REDSTONE_WIRE = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType OAK_WALL_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType SPRUCE_WALL_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BIRCH_WALL_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ACACIA_WALL_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType JUNGLE_WALL_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType DARK_OAK_WALL_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType REDSTONE_WALL_TORCH = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType SOUL_WALL_TORCH = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType NETHER_PORTAL = StateTypes.builder().blastResistance(0.0f).hardness(-1.0f).setMaterial(MaterialType.PORTAL).build();
    public static StateType ATTACHED_PUMPKIN_STEM = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType ATTACHED_MELON_STEM = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType PUMPKIN_STEM = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType MELON_STEM = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType WATER_CAULDRON = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType LAVA_CAULDRON = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType POWDER_SNOW_CAULDRON = StateTypes.builder().blastResistance(2.0f).hardness(2.0f).isSolid(true).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.METAL).build();
    public static StateType END_PORTAL = StateTypes.builder().blastResistance(3600000.0f).hardness(-1.0f).setMaterial(MaterialType.PORTAL).build();
    public static StateType COCOA = StateTypes.builder().blastResistance(3.0f).hardness(0.2f).setMaterial(MaterialType.PLANT).build();
    public static StateType TRIPWIRE = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_OAK_SAPLING = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_SPRUCE_SAPLING = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_BIRCH_SAPLING = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_JUNGLE_SAPLING = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_ACACIA_SAPLING = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_DARK_OAK_SAPLING = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_FERN = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_DANDELION = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_POPPY = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_BLUE_ORCHID = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_ALLIUM = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_AZURE_BLUET = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_RED_TULIP = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_ORANGE_TULIP = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_WHITE_TULIP = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_PINK_TULIP = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_OXEYE_DAISY = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_CORNFLOWER = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_LILY_OF_THE_VALLEY = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_WITHER_ROSE = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_RED_MUSHROOM = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_BROWN_MUSHROOM = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_DEAD_BUSH = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_CACTUS = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType CARROTS = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType POTATOES = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType SKELETON_WALL_SKULL = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).setMaterial(MaterialType.DECORATION).build();
    public static StateType WITHER_SKELETON_WALL_SKULL = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).setMaterial(MaterialType.DECORATION).build();
    public static StateType ZOMBIE_WALL_HEAD = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).setMaterial(MaterialType.DECORATION).build();
    public static StateType PLAYER_WALL_HEAD = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).setMaterial(MaterialType.DECORATION).build();
    public static StateType CREEPER_WALL_HEAD = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).setMaterial(MaterialType.DECORATION).build();
    public static StateType DRAGON_WALL_HEAD = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).setMaterial(MaterialType.DECORATION).build();
    public static StateType WHITE_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType ORANGE_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType MAGENTA_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType LIGHT_BLUE_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType YELLOW_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType LIME_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType PINK_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType GRAY_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType LIGHT_GRAY_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType CYAN_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType PURPLE_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BLUE_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BROWN_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType GREEN_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType RED_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BLACK_WALL_BANNER = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).isSolid(false).isBlocking(true).setMaterial(MaterialType.WOOD).build();
    public static StateType BEETROOTS = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType END_GATEWAY = StateTypes.builder().blastResistance(3600000.0f).hardness(-1.0f).setMaterial(MaterialType.PORTAL).build();
    public static StateType FROSTED_ICE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).slipperiness(0.98f).isSolid(true).isBlocking(true).setMaterial(MaterialType.ICE).build();
    public static StateType KELP_PLANT = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType DEAD_TUBE_CORAL_WALL_FAN = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_BRAIN_CORAL_WALL_FAN = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_BUBBLE_CORAL_WALL_FAN = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_FIRE_CORAL_WALL_FAN = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType DEAD_HORN_CORAL_WALL_FAN = StateTypes.builder().isSolid(false).isBlocking(true).requiresCorrectTool(true).setMaterial(MaterialType.STONE).build();
    public static StateType TUBE_CORAL_WALL_FAN = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType BRAIN_CORAL_WALL_FAN = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType BUBBLE_CORAL_WALL_FAN = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType FIRE_CORAL_WALL_FAN = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType HORN_CORAL_WALL_FAN = StateTypes.builder().setMaterial(MaterialType.WATER_PLANT).build();
    public static StateType BAMBOO_SAPLING = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isFlammable(true).setMaterial(MaterialType.BAMBOO_SAPLING).build();
    public static StateType POTTED_BAMBOO = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType VOID_AIR = StateTypes.builder().isAir(true).setMaterial(MaterialType.AIR).build();
    public static StateType CAVE_AIR = StateTypes.builder().isAir(true).setMaterial(MaterialType.AIR).build();
    public static StateType BUBBLE_COLUMN = StateTypes.builder().setMaterial(MaterialType.BUBBLE_COLUMN).build();
    public static StateType SWEET_BERRY_BUSH = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType WEEPING_VINES_PLANT = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType TWISTING_VINES_PLANT = StateTypes.builder().setMaterial(MaterialType.PLANT).build();
    public static StateType CRIMSON_WALL_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isSolid(false).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType WARPED_WALL_SIGN = StateTypes.builder().blastResistance(1.0f).hardness(1.0f).isSolid(false).isBlocking(true).setMaterial(MaterialType.NETHER_WOOD).build();
    public static StateType POTTED_CRIMSON_FUNGUS = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_WARPED_FUNGUS = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_CRIMSON_ROOTS = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_WARPED_ROOTS = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType WHITE_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType ORANGE_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType MAGENTA_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType LIGHT_BLUE_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType YELLOW_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType LIME_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType PINK_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType GRAY_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType LIGHT_GRAY_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType CYAN_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType PURPLE_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType BLUE_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType BROWN_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType GREEN_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType RED_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType BLACK_CANDLE_CAKE = StateTypes.builder().blastResistance(0.5f).hardness(0.5f).isSolid(true).isBlocking(true).setMaterial(MaterialType.CAKE).build();
    public static StateType POWDER_SNOW = StateTypes.builder().blastResistance(0.25f).hardness(0.25f).setMaterial(MaterialType.POWDER_SNOW).build();
    public static StateType CAVE_VINES = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType CAVE_VINES_PLANT = StateTypes.builder().isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType BIG_DRIPLEAF_STEM = StateTypes.builder().blastResistance(0.1f).hardness(0.1f).isBurnable(true).setMaterial(MaterialType.PLANT).build();
    public static StateType POTTED_AZALEA_BUSH = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();
    public static StateType POTTED_FLOWERING_AZALEA_BUSH = StateTypes.builder().setMaterial(MaterialType.DECORATION).build();

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        float blastResistance = 0F;
        float hardness = 0F;
        float slipperiness = 0.6F;
        float friction = 0.6F;
        float speed = 1F;
        boolean hasGravity = false;
        boolean isAir = false;
        boolean isBurnable;
        boolean isFlammable;
        boolean isOccluding;
        boolean isSolid;
        boolean isLiquid;
        boolean isBlocking;
        boolean requiresCorrectTool = false;
        boolean isReplaceable;
        PushReaction pushReaction;
        MaterialType materialType;

        public Builder blastResistance(float blastResistance) {
            this.blastResistance = blastResistance;
            return this;
        }

        public Builder hardness(float hardness) {
            this.hardness = hardness;
            return this;
        }

        public Builder slipperiness(float slipperiness) {
            this.slipperiness = slipperiness;
            return this;
        }

        public Builder friction(float friction) {
            this.friction = friction;
            return this;
        }

        public Builder speed(float speed) {
            this.speed = speed;
            return this;
        }

        public Builder hasGravity(boolean hasGravity) {
            this.hasGravity = hasGravity;
            return this;
        }

        public Builder isAir(boolean isAir) {
            this.isAir = isAir;
            return this;
        }

        public Builder isBurnable(boolean isBurnable) {
            this.isBurnable = isBurnable;
            return this;
        }

        public Builder isFlammable(boolean isFlammable) {
            this.isFlammable = isFlammable;
            return this;
        }

        public Builder isOccluding(boolean isOccluding) {
            this.isOccluding = isOccluding;
            return this;
        }

        public Builder isSolid(boolean isSolid) {
            this.isSolid = isSolid;
            return this;
        }

        public Builder isLiquid(boolean isLiquid) {
            this.isLiquid = isLiquid;
            return this;
        }

        public Builder isBlocking(boolean isBlocking) {
            this.isBlocking = isBlocking;
            return this;
        }

        public Builder requiresCorrectTool(boolean requiresCorrectTool) {
            this.requiresCorrectTool = requiresCorrectTool;
            return this;
        }

        public Builder isReplaceable(boolean isReplaceable) {
            this.isReplaceable = isReplaceable;
            return this;
        }

        public Builder pushReaction(PushReaction pushReaction) {
            this.pushReaction = pushReaction;
            return this;
        }

        public Builder setMaterial(MaterialType materialType) {
            this.materialType = materialType;
            return this;
        }

        public StateType build() {
            return new StateType(blastResistance, hardness, slipperiness, friction, speed, hasGravity, isAir, isBurnable, isFlammable, isOccluding, isSolid, isLiquid, isBlocking, requiresCorrectTool, isReplaceable, pushReaction, materialType);
        }
    }
}